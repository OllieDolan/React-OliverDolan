{"ast":null,"code":"var _jsxFileName = \"/Users/olliejolly/react-assignment1/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [person, setPerson] = useState({\n    name: '',\n    job: ''\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name == \"job\") setPerson({\n      name: person['name'],\n      job: value\n    });else setPerson({\n      name: value,\n      job: person['job']\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: person.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"job\",\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"job\",\n      id: \"job\",\n      value: person.job,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n\n  function submitForm() {\n    props.handleSubmit(person);\n    setPerson({\n      name: '',\n      job: ''\n    });\n  }\n}\n\n_s(Form, \"nD9j7RNXDwr1IQdx9ZCH3prkHLM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/olliejolly/react-assignment1/src/Form.js"],"names":["React","useState","Form","props","person","setPerson","name","job","handleChange","event","value","target","submitForm","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAChC;AACIK,IAAAA,IAAI,EAAE,EADV;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADgC,CAApC;;AAMA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAM;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACA,QAAIL,IAAI,IAAI,KAAZ,EACID,SAAS,CACL;AAAEC,MAAAA,IAAI,EAAEF,MAAM,CAAC,MAAD,CAAd;AAAwBG,MAAAA,GAAG,EAAEG;AAA7B,KADK,CAAT,CADJ,KAKIL,SAAS,CACL;AAAEC,MAAAA,IAAI,EAAEI,KAAR;AAAeH,MAAAA,GAAG,EAAEH,MAAM,CAAC,KAAD;AAA1B,KADK,CAAT;AAGP;;AACD,sBACI;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAC,MAHP;AAII,MAAA,KAAK,EAAEA,MAAM,CAACE,IAJlB;AAKI,MAAA,QAAQ,EAAEE;AALd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,KAFT;AAGI,MAAA,EAAE,EAAC,KAHP;AAII,MAAA,KAAK,EAAEJ,MAAM,CAACG,GAJlB;AAKI,MAAA,QAAQ,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,YATJ,eAeI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAmBA,WAASA,UAAT,GAAsB;AAClBT,IAAAA,KAAK,CAACU,YAAN,CAAmBT,MAAnB;AACAC,IAAAA,SAAS,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KAAD,CAAT;AACH;AACJ;;GAzCQL,I;;KAAAA,I;AA2CT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction Form(props) {\n    const [person, setPerson] = useState(\n        {\n            name: '',\n            job: '',\n        }\n    );\n    function handleChange(event) {\n        const { name, value } = event.target;\n        if (name == \"job\")\n            setPerson(\n                { name: person['name'], job: value }\n            );\n        else\n            setPerson(\n                { name: value, job: person['job'] }\n            );\n    }\n    return (\n        <form>\n            <label htmlFor=\"name\">Name</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                value={person.name}\n                onChange={handleChange} />\n            <label htmlFor=\"job\">Job</label>\n            <input\n                type=\"text\"\n                name=\"job\"\n                id=\"job\"\n                value={person.job}\n                onChange={handleChange} />\n            <input type=\"button\" value=\"Submit\" onClick={submitForm} />\n        </form>\n    )\n    function submitForm() {\n        props.handleSubmit(person);\n        setPerson({ name: '', job: '' });\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}